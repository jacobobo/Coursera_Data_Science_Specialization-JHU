library(xlsx)
library(xlsx)
install.packages("dplyr")
library(dplyr)
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1",
| country == "US")
filter(cran, r_version == "3.1.1",country == "US")
?Comparison
filter(cran, r_version <= "3.0.2",country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
cran3
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(.cran, package
)
by_package <- group_by(.cran, package)
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count()))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
swirl()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
sudents2
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
submit()
students3
submit()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status ="passed")
failed <- mutate(failed, status ="failed")
?bind_rows
bind_rows(passed, failed)
sat
submit()
?separate
submit()
submit()
submit()
setwd("C:/Users/Jacob/course/Coursera_Data_Science_Specialization-JHU/Getting_and_Cleaning_Data")
library("dplyr", lib.loc="~/R/win-library/3.2")
agricultureLogical <-
mydf <- read.csv("getdata-data-ss06hid.csv")
agricultureLogical <- select(mydf, ACR == 3 & AGS = 6 )
agricultureLogical <- select(mydf, ACR == 3, AGS = 6 )
View(mydf)
agricultureLogical <- select(mydf, ACR = 3, AGS = 6 )
which(agricultureLogical)
lapply(mydf, which(agricultureLogical))
select(mydf, which(agricultureLogical))
?which
mydf[which(agricultureLogical),]
agricultureLogical <- mydf[(mydf$ACR == 3 & mydf$AGS ==6),]
agricultureLogical <- mydf(mydf$ACR == 3 & mydf$AGS ==6)
agricultureLogical <- sapply(mydf, mydf$ACR == 3 & mydf$AGS ==6)
agricultureLogical <- sapply(mydf, (mydf$ACR == 3 & mydf$AGS ==6))
agricultureLogical <- any(mydf$ACR == 3 & mydf$AGS ==6)
agricultureLogical <- mydf %in% (mydf$ACR == 3 & mydf$AGS ==6)
mydf[which(agricultureLogical),]
str(mydf)
agricultureLogical <- mydf %in% (mydf$ACR == 3 && mydf$AGS == 6)
agricultureLogical <- mydf %in% (mydf$ACR == 3 & mydf$AGS == 6)
mydf[mydf$ACR == 3 & mydf$AGS == 6,]
ok <- mydf[mydf$ACR == 3 & mydf$AGS == 6,]
ok <- mydf[mydf$ACR = 3 & mydf$AGS = 6,]
agricultureLogical mydf$ACR == 3 & mydf$AGS == 6
agricultureLogical <- mydf$ACR == 3 & mydf$AGS == 6
View(students2)
mydf[which(agricultureLogical),]
head(mydf[which(agricultureLogical),])
library(jpeg)
install.packages("jpeg")
library(jpeg)
names(jpeg)
pic <- readJPEG("getdata-jeff.jpg", native = TRUE)
?quantile
quantile(pic, probs = c(.3, .8))
GDP <- read.csv("getdata-data-GDP.csv")
edu <- read.csv("getdata-data-EDSTATS_Country.csv")
?match
intersect(names(GDP), names(edu))
View(GDP)
View(edu)
GDP <- GDP[!is.na(GDP$X),]
View(GDP)
intersect(GDP$X, edu$CountryCode)
count(intersect(GDP$X, edu$CountryCode))
matches <- intersect(GDP$X, edu$CountryCode)
?read.csv
GDP <- read.csv("getdata-data-GDP.csv", blank.lines.skip = TRUE)
GDP <- read.csv("getdata-data-GDP.csv", skip = 4, blank.lines.skip = TRUE)
combined <- merge()
?merge
combined <- merge(GDP,edu,by.x = "X", by.y = "CountryCode")
View(combined)
GDP <- arrange(GDP)
?arrange
GDP <- arrange(GDP, X)
GDP <- arrange(GDP, desc(X))
GDP <- GDP[1:228,]
combined <- merge(GDP,edu,by.x = "X", by.y = "CountryCode")
combined <- order(combined, "X.1")
combined <- arrange(combined, desc(X.1))
summarize(combined)
cool <- tbl_df(combined)
summarise(cool)
str(cool)
combined <- mutate(combined, X.1 = as.integer(X.1))
str(cool)
new <- arrange(GDP, desc(X.1))
View(new)
new <- as.integer(new$X.1)
new <- arrange(GDP, desc(X.1))
sort(new, "X.1")
sort(new, 2)
sort(new)
order(new$X.1)
sort(new$X.1)
new <- new[order(new$X.1),]
summarise(new)
new <- tbl_df(ew)
new <- tbl_df(new)
summarize(new)
summary(new)
str(new)
q4 <- select(combined, X.1, Income.Group)
q4 <- group_by(q4, Income.Group)
table(q4, mean(q4$X.1))
summarize(q4)
View(q4)
grp1 <- q4[,q4$Income.Group == "High income: OECD"]
grp1 <- q4[!is.na(q4$Income.Group),]
summarize(q4)
ftable(q4)
ftable(grp1)
View(q4)
mean(q4$X.1)
mean(grp1$X.1)
grp1 <- by_group(grp1)
grp1 <- group_by(grp1)
mean(grp1$X.1)
table(grp1)
table(grp1, mean(grp1$X.1))
grp1 <- q4[q4$Income.Group = "High income: OECD",]
grp1 <- q4[q4$Income.Group == "High income: OECD",]
grp1
mean(grp1$X.1)
View(grp1)
grp2 <- q4[q4$Income.Group == "High income: nonOECD",]
View(grp2)
grp2 <- grp2[1:24,]
mean(grp2$X.1)
View(grp1)
GDP <- read.csv("getdata-data-GDP.csv", skip = 4)
GDP <- GDP[1:190,]
combo <- merge(GDP, edu, by.x = "X.1", by.y = "CountryCode", sort = FALSE)
View(combo)
combo <- merge(GDP, edu, by.x = "X", by.y = "CountryCode", sort = FALSE)
View(combo)
q4 <- select(combo, X.1, Income.Group)
grp1 <- q4[q4$Income.Group == "High income: OECD",
)
grp1 <- q4[q4$Income.Group == "High income: OECD",]
mean(grp1$X.1)
View(grp1)
mean(grp1$X.1)
mean(as.integer(grp1$X.1))
grp2 <- q4[q4$Income.Group == "High income: nonOECD",]
View(grp2)
mean(as.integer(grp2$X.1))
sum(as.integer(grp2$X.1))
2156/23
sum(as.integer(grp1$X.1))
3302/30
