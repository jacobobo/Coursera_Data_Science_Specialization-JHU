library(xlsx)
library(xlsx)
install.packages("lubridate")
library(lubridate)
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = T)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(m_date)
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_ moment <- update(this_moment, hours = 11, minutes = 42, seconds = 55)
this_moment <- update(this_moment, hours = 11, minutes = 42, seconds = 55)
this_moment
nyc <- now(tz="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
>with_tz
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
setwd("C:/Users/Jacob/course/Coursera_Data_Science_Specialization-JHU/Getting_and_Cleaning_Data")
mydf <- read.csv("getdata-data-ss06hid.csv")
View(mydf)
ans1 <- strsplit(names(mydf), "wgtp" )
ans1
gdp <- read.csv("getdata-data-GDP.csv")
View(gdp)
gdp <- read.csv("getdata-data-GDP.csv", skip = 4)
gdp <- gdp[1:190,]
gdp <- gsub(",","",gdp)
gdp <- read.csv("getdata-data-GDP.csv", skip = 4)
gdp <- gdp[1:190,]
gdp <- gsub(",","",gdp$X.4)
head(gdp)
mean(gdp)
mean(as.numberic(gdp))
mean(as.numeric(gdp))
grep("^United",)
gdp <- read.csv("getdata-data-GDP.csv", skip = 4)
gdp <- gdp[1:190,]
grep("^United", gdp$X.3)
edu <- read.csv("getdata-data-EDSTATS_Country.csv")
View(edu)
merge?
?merge
combo <- merge(gdp, edu, by.x = "X", by.y = "CountryCode")
View(combo)
fiscal <- grep("^Fiscal", combo$Special.Notes, value = TRUE)
View(fiscal)
fiscal
?substr
?strsplit
fiscal <- strsplit(fiscal, "Fiscal year end: ", fixed = TRUE)
fiscal
sum(grepl("June", fiscal))
install.packages("quantmod")
library(quantmod)
amzn <- getSymbols("AMZN",auto.assign=FALSE)
View(amzn)
sampleTimes = index(amzn)
class(sampleTimes)
str(sampleTimes)
amz2012 <- grep("2012", sampleTimes, value = TRUE)
table(wday(amz2012))
setwd("C:/Users/Jacob/course/Coursera_Data_Science_Specialization-JHU/Getting_and_Cleaning_Data/Final")
x <- read.table("/test/X_test.txt")
x <- read.table("\test\X_test.txt")
x <- read.table("~/test/X_test.txt")
x <- read.table("./test/X_test.txt", sep = "\t", fill = FALSE, strip.white = TRUE)
View(x)
x <- read.table("./test/X_test.txt", fill = FALSE, strip.white = TRUE)
x <- read.table("./test/X_test.txt", strip.white = TRUE)
View(x)
features <- read.table("features.txt", strip.white = TRUE)
View(features)
features <- features[,2]
head(features)
features <- read.table("features.txt", strip.white = TRUE)
features <- as.factor(features[,2])
tail(features)
features <- read.table("features.txt", strip.white = TRUE)
View(features)
activities <- read.table("activity_labels.txt", strip.white = TRUE)
activities <- read.table("activity_labels.txt", strip.white = TRUE, stringsAsFactors = TRUE)
activities <- read.table("activity_labels.txt", strip.white = TRUE)
x <- read.table("./test/X_test.txt", col.names = features$V2, strip.white = TRUE)
subtest <- read.table("./test/subject_test.txt", strip.white = TRUE)
View(subtest)
source(run_analysis.R)
source('run_analysis.R')
source("run_analysis.R")
View(activities)
?gather
library)tidyr
library(tidyr)
?gather
?arrange
library(dplyr)
?arrange
?join
join(subtest, activitytest)
full_join(subtest, activitytest)
head(mutate(subtest, activity = activitytest), 20)
library(reshape2)
install.packages("reshape2")
library(reshape2)
?melt
rownames((activitytest))
rownames(subtest)
head(merge(subtest, activitytest, by = rownames(subtest)), 20)
head(merge(subtest, activitytest, by.x = row.names(subtest), by.y = row.names(activitytest)), 20)
head(merge(subtest, activitytest, by = "row.names"), 20)
x <- head(merge(subtest, activitytest, by = "row.names"), 20)
class(x$Row.names)
class(as.integer(x$Row.names))
?cbind
x <- as.data.frame(cbind(subtest,activitytest,xtest))
View(x)
names(x[,1:2]) <- c("subject","activity")
y <- as.data.frame(cbind(subtrain, activitytrain, xtrain))
uberdf <- rbind(x,y)
View(features)
head(names(uberdf))
cols <- grepl("mean()" | "std()", names(uberdf))
cols <- grepl("mean\(\)" | "std\(\)", names(uberdf))
cols <- grepl("mean", names(uberdf))
View(uberdf)
uberdf <- uberdf[,1:556]
tail(uberdf)
cols <- grepl("mean" | "std", names(uberdf))
cols <- grepl("mean | std", names(uberdf))
cols <- grepl("mean", names(uberdf))
cols <- grepl("mean", names(uberdf))
sum(cols)
cols <- grepl("[Mm]ean", names(uberdf))
sum(cols)
cols <- grepl("[Mm]ean [^[Ff]req", names(uberdf))
sum(cols)
cols <- grepl("[Mm]ean [^[Ff]req]", names(uberdf))
cols <- grepl("[Mm]ean", names(uberdf))
cols <- grepl("[Mm]ean ^[fF]req", names(uberdf))
cols <- grepl("[Mm]ean\\()\\", names(uberdf))
cols <- grepl("[Mm]ean\()\", names(uberdf))
cols <- grepl("[Mm]ean\\(", names(uberdf))
cols <- grepl("[Mm]ean", names(uberdf))
cols <- grepl("mean\\(", names(uberdf))
cols <- grepl("[Mm]ean", names(uberdf))
cols <- grepl("mean(", names(uberdf), fixed = TRUE)
cols <- grepl("mean\\(", names(uberdf), fixed = TRUE)
cols <- grepl("[Mm]ean", names(uberdf))
cols[375]
features[1]
features[1,2]
grep("mean()", features[1:6,2], fixed = TRUE)
grepl("mean()", features[1:6,2], fixed = TRUE)
cols <- grepl("mean()", names(uberdf), fixed = TRUE)
namescol <- names(uberdf)
grep("mean()", features[3:9], fixed = TRUE)
grep("mean()", features[[3:9], fixed = TRUE)
grep("mean()", features[[3:9]], fixed = TRUE)
grep("mean()", namescol[3:9], fixed = TRUE)
grep("mean()" | "std()", features[1:6,2], fixed = TRUE)
grep("mean()", namescol[3:9], fixed = TRUE)
ubernames <- names(uberdf)
cols <- grepl("mean()", ubernames, fixed = TRUE)
grepl("mean()", ubernames, fixed = TRUE)
grepl("mean()", features$V2, fixed = TRUE)
ubernames <- as.factor(names(uberdf))
grepl("mean()", ubernames, fixed = TRUE)
ubernames[3]
features[1,2]
class(uberdf)
names(uberdf[,3:556]) <- features[1:554,2]
source("run_analysis.R")
summary(features)
tail(features)
uberdf[1,558:563]
source("run_analysis.R")
uberdf[1,558:563]
grepl("mean()", names(uberdf), fixed = TRUE)
grepl("mean\\(\\)", names(uberdf))
grepl("mean\\(\\)|std\\(\\)", names(uberdf))
goodcolumns <- grepl("mean\\(\\)|std\\(\\)", names(uberdf))
goodframe <- data.frame(uberdf[,1:2], uberdf[,goodcolumns])
sum(goodcolumns)
goodframe <- data.frame(uberdf[,1:2], uberdf[,goodcolumns], check.names = FALSE)
View(activities)
sub(activities$V1,activities$V2,goodframe$V1.1)
for (i in 1:length(activities[,1])) { goodframe$V1.1 <- sub(activities[i,1],activities[1,2],goodframe$V1.1)}
for (i in 1:length(activities[,1])) { sub(activities[i,1],activities[1,2],goodframe$V1.1)}
View(goodframe)
View(uberdf)
for (i in 1:length(activities[,1])) { goodframe$V1.1 <- sub(activities[i,1],activities[1,2],goodframe$V1.1)}
for (i in 1:length(activities[,1])) { sub(activities[i,1],activities[1,2],goodframe$V1.1)}
for (i in 1:nrow(activities)) { sub(activities[i,1],activities[1,2],goodframe$V1.1)}
for (i in 1:nrow(activities)) { sub(activities[i,1],activities[i,2],goodframe$V1.1)}
goodframe <- data.frame(uberdf[,1:2], uberdf[,goodcolumns],
check.names = FALSE)
for (i in 1:nrow(activities)) { sub(activities[i,1],activities[i,2],goodframe$V1.1)}
for (i in 1:nrow(activities)) { goodframe$V1.1 <- sub(activities[i,1],activities[i,2],goodframe$V1.1)}
View(uberdf)
View(features)
source("run_analysis.R")
table(goodframe)
summarize(goodframe)
